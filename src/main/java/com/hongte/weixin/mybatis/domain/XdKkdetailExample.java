package com.hongte.weixin.mybatis.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class XdKkdetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public XdKkdetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFidIsNull() {
            addCriterion("FID is null");
            return (Criteria) this;
        }

        public Criteria andFidIsNotNull() {
            addCriterion("FID is not null");
            return (Criteria) this;
        }

        public Criteria andFidEqualTo(Integer value) {
            addCriterion("FID =", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidNotEqualTo(Integer value) {
            addCriterion("FID <>", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidGreaterThan(Integer value) {
            addCriterion("FID >", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidGreaterThanOrEqualTo(Integer value) {
            addCriterion("FID >=", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidLessThan(Integer value) {
            addCriterion("FID <", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidLessThanOrEqualTo(Integer value) {
            addCriterion("FID <=", value, "fid");
            return (Criteria) this;
        }

        public Criteria andFidIn(List<Integer> values) {
            addCriterion("FID in", values, "fid");
            return (Criteria) this;
        }

        public Criteria andFidNotIn(List<Integer> values) {
            addCriterion("FID not in", values, "fid");
            return (Criteria) this;
        }

        public Criteria andFidBetween(Integer value1, Integer value2) {
            addCriterion("FID between", value1, value2, "fid");
            return (Criteria) this;
        }

        public Criteria andFidNotBetween(Integer value1, Integer value2) {
            addCriterion("FID not between", value1, value2, "fid");
            return (Criteria) this;
        }

        public Criteria andFentryidIsNull() {
            addCriterion("FEntryID is null");
            return (Criteria) this;
        }

        public Criteria andFentryidIsNotNull() {
            addCriterion("FEntryID is not null");
            return (Criteria) this;
        }

        public Criteria andFentryidEqualTo(Integer value) {
            addCriterion("FEntryID =", value, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidNotEqualTo(Integer value) {
            addCriterion("FEntryID <>", value, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidGreaterThan(Integer value) {
            addCriterion("FEntryID >", value, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidGreaterThanOrEqualTo(Integer value) {
            addCriterion("FEntryID >=", value, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidLessThan(Integer value) {
            addCriterion("FEntryID <", value, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidLessThanOrEqualTo(Integer value) {
            addCriterion("FEntryID <=", value, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidIn(List<Integer> values) {
            addCriterion("FEntryID in", values, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidNotIn(List<Integer> values) {
            addCriterion("FEntryID not in", values, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidBetween(Integer value1, Integer value2) {
            addCriterion("FEntryID between", value1, value2, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFentryidNotBetween(Integer value1, Integer value2) {
            addCriterion("FEntryID not between", value1, value2, "fentryid");
            return (Criteria) this;
        }

        public Criteria andFperiodIsNull() {
            addCriterion("FPeriod is null");
            return (Criteria) this;
        }

        public Criteria andFperiodIsNotNull() {
            addCriterion("FPeriod is not null");
            return (Criteria) this;
        }

        public Criteria andFperiodEqualTo(BigDecimal value) {
            addCriterion("FPeriod =", value, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodNotEqualTo(BigDecimal value) {
            addCriterion("FPeriod <>", value, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodGreaterThan(BigDecimal value) {
            addCriterion("FPeriod >", value, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FPeriod >=", value, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodLessThan(BigDecimal value) {
            addCriterion("FPeriod <", value, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FPeriod <=", value, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodIn(List<BigDecimal> values) {
            addCriterion("FPeriod in", values, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodNotIn(List<BigDecimal> values) {
            addCriterion("FPeriod not in", values, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FPeriod between", value1, value2, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFperiodNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FPeriod not between", value1, value2, "fperiod");
            return (Criteria) this;
        }

        public Criteria andFdateIsNull() {
            addCriterion("FDate is null");
            return (Criteria) this;
        }

        public Criteria andFdateIsNotNull() {
            addCriterion("FDate is not null");
            return (Criteria) this;
        }

        public Criteria andFdateEqualTo(Date value) {
            addCriterion("FDate =", value, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateNotEqualTo(Date value) {
            addCriterion("FDate <>", value, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateGreaterThan(Date value) {
            addCriterion("FDate >", value, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateGreaterThanOrEqualTo(Date value) {
            addCriterion("FDate >=", value, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateLessThan(Date value) {
            addCriterion("FDate <", value, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateLessThanOrEqualTo(Date value) {
            addCriterion("FDate <=", value, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateIn(List<Date> values) {
            addCriterion("FDate in", values, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateNotIn(List<Date> values) {
            addCriterion("FDate not in", values, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateBetween(Date value1, Date value2) {
            addCriterion("FDate between", value1, value2, "fdate");
            return (Criteria) this;
        }

        public Criteria andFdateNotBetween(Date value1, Date value2) {
            addCriterion("FDate not between", value1, value2, "fdate");
            return (Criteria) this;
        }

        public Criteria andFperrevIsNull() {
            addCriterion("FPerRev is null");
            return (Criteria) this;
        }

        public Criteria andFperrevIsNotNull() {
            addCriterion("FPerRev is not null");
            return (Criteria) this;
        }

        public Criteria andFperrevEqualTo(BigDecimal value) {
            addCriterion("FPerRev =", value, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevNotEqualTo(BigDecimal value) {
            addCriterion("FPerRev <>", value, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevGreaterThan(BigDecimal value) {
            addCriterion("FPerRev >", value, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FPerRev >=", value, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevLessThan(BigDecimal value) {
            addCriterion("FPerRev <", value, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FPerRev <=", value, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevIn(List<BigDecimal> values) {
            addCriterion("FPerRev in", values, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevNotIn(List<BigDecimal> values) {
            addCriterion("FPerRev not in", values, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FPerRev between", value1, value2, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FPerRev not between", value1, value2, "fperrev");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteIsNull() {
            addCriterion("FPerRevNote is null");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteIsNotNull() {
            addCriterion("FPerRevNote is not null");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteEqualTo(String value) {
            addCriterion("FPerRevNote =", value, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteNotEqualTo(String value) {
            addCriterion("FPerRevNote <>", value, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteGreaterThan(String value) {
            addCriterion("FPerRevNote >", value, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteGreaterThanOrEqualTo(String value) {
            addCriterion("FPerRevNote >=", value, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteLessThan(String value) {
            addCriterion("FPerRevNote <", value, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteLessThanOrEqualTo(String value) {
            addCriterion("FPerRevNote <=", value, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteLike(String value) {
            addCriterion("FPerRevNote like", value, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteNotLike(String value) {
            addCriterion("FPerRevNote not like", value, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteIn(List<String> values) {
            addCriterion("FPerRevNote in", values, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteNotIn(List<String> values) {
            addCriterion("FPerRevNote not in", values, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteBetween(String value1, String value2) {
            addCriterion("FPerRevNote between", value1, value2, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteNotBetween(String value1, String value2) {
            addCriterion("FPerRevNote not between", value1, value2, "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFbenjinIsNull() {
            addCriterion("FBenjin is null");
            return (Criteria) this;
        }

        public Criteria andFbenjinIsNotNull() {
            addCriterion("FBenjin is not null");
            return (Criteria) this;
        }

        public Criteria andFbenjinEqualTo(BigDecimal value) {
            addCriterion("FBenjin =", value, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinNotEqualTo(BigDecimal value) {
            addCriterion("FBenjin <>", value, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinGreaterThan(BigDecimal value) {
            addCriterion("FBenjin >", value, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FBenjin >=", value, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinLessThan(BigDecimal value) {
            addCriterion("FBenjin <", value, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FBenjin <=", value, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinIn(List<BigDecimal> values) {
            addCriterion("FBenjin in", values, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinNotIn(List<BigDecimal> values) {
            addCriterion("FBenjin not in", values, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FBenjin between", value1, value2, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFbenjinNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FBenjin not between", value1, value2, "fbenjin");
            return (Criteria) this;
        }

        public Criteria andFlixiIsNull() {
            addCriterion("FLixi is null");
            return (Criteria) this;
        }

        public Criteria andFlixiIsNotNull() {
            addCriterion("FLixi is not null");
            return (Criteria) this;
        }

        public Criteria andFlixiEqualTo(BigDecimal value) {
            addCriterion("FLixi =", value, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiNotEqualTo(BigDecimal value) {
            addCriterion("FLixi <>", value, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiGreaterThan(BigDecimal value) {
            addCriterion("FLixi >", value, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FLixi >=", value, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiLessThan(BigDecimal value) {
            addCriterion("FLixi <", value, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FLixi <=", value, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiIn(List<BigDecimal> values) {
            addCriterion("FLixi in", values, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiNotIn(List<BigDecimal> values) {
            addCriterion("FLixi not in", values, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLixi between", value1, value2, "flixi");
            return (Criteria) this;
        }

        public Criteria andFlixiNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLixi not between", value1, value2, "flixi");
            return (Criteria) this;
        }

        public Criteria andFactrevIsNull() {
            addCriterion("FActRev is null");
            return (Criteria) this;
        }

        public Criteria andFactrevIsNotNull() {
            addCriterion("FActRev is not null");
            return (Criteria) this;
        }

        public Criteria andFactrevEqualTo(BigDecimal value) {
            addCriterion("FActRev =", value, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevNotEqualTo(BigDecimal value) {
            addCriterion("FActRev <>", value, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevGreaterThan(BigDecimal value) {
            addCriterion("FActRev >", value, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FActRev >=", value, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevLessThan(BigDecimal value) {
            addCriterion("FActRev <", value, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FActRev <=", value, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevIn(List<BigDecimal> values) {
            addCriterion("FActRev in", values, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevNotIn(List<BigDecimal> values) {
            addCriterion("FActRev not in", values, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FActRev between", value1, value2, "factrev");
            return (Criteria) this;
        }

        public Criteria andFactrevNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FActRev not between", value1, value2, "factrev");
            return (Criteria) this;
        }

        public Criteria andFamtallIsNull() {
            addCriterion("FAmtAll is null");
            return (Criteria) this;
        }

        public Criteria andFamtallIsNotNull() {
            addCriterion("FAmtAll is not null");
            return (Criteria) this;
        }

        public Criteria andFamtallEqualTo(BigDecimal value) {
            addCriterion("FAmtAll =", value, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallNotEqualTo(BigDecimal value) {
            addCriterion("FAmtAll <>", value, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallGreaterThan(BigDecimal value) {
            addCriterion("FAmtAll >", value, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FAmtAll >=", value, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallLessThan(BigDecimal value) {
            addCriterion("FAmtAll <", value, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FAmtAll <=", value, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallIn(List<BigDecimal> values) {
            addCriterion("FAmtAll in", values, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallNotIn(List<BigDecimal> values) {
            addCriterion("FAmtAll not in", values, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAmtAll between", value1, value2, "famtall");
            return (Criteria) this;
        }

        public Criteria andFamtallNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAmtAll not between", value1, value2, "famtall");
            return (Criteria) this;
        }

        public Criteria andFoverIsNull() {
            addCriterion("FOver is null");
            return (Criteria) this;
        }

        public Criteria andFoverIsNotNull() {
            addCriterion("FOver is not null");
            return (Criteria) this;
        }

        public Criteria andFoverEqualTo(Boolean value) {
            addCriterion("FOver =", value, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverNotEqualTo(Boolean value) {
            addCriterion("FOver <>", value, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverGreaterThan(Boolean value) {
            addCriterion("FOver >", value, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverGreaterThanOrEqualTo(Boolean value) {
            addCriterion("FOver >=", value, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverLessThan(Boolean value) {
            addCriterion("FOver <", value, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverLessThanOrEqualTo(Boolean value) {
            addCriterion("FOver <=", value, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverIn(List<Boolean> values) {
            addCriterion("FOver in", values, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverNotIn(List<Boolean> values) {
            addCriterion("FOver not in", values, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverBetween(Boolean value1, Boolean value2) {
            addCriterion("FOver between", value1, value2, "fover");
            return (Criteria) this;
        }

        public Criteria andFoverNotBetween(Boolean value1, Boolean value2) {
            addCriterion("FOver not between", value1, value2, "fover");
            return (Criteria) this;
        }

        public Criteria andFoveredIsNull() {
            addCriterion("FOvered is null");
            return (Criteria) this;
        }

        public Criteria andFoveredIsNotNull() {
            addCriterion("FOvered is not null");
            return (Criteria) this;
        }

        public Criteria andFoveredEqualTo(Boolean value) {
            addCriterion("FOvered =", value, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredNotEqualTo(Boolean value) {
            addCriterion("FOvered <>", value, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredGreaterThan(Boolean value) {
            addCriterion("FOvered >", value, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredGreaterThanOrEqualTo(Boolean value) {
            addCriterion("FOvered >=", value, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredLessThan(Boolean value) {
            addCriterion("FOvered <", value, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredLessThanOrEqualTo(Boolean value) {
            addCriterion("FOvered <=", value, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredIn(List<Boolean> values) {
            addCriterion("FOvered in", values, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredNotIn(List<Boolean> values) {
            addCriterion("FOvered not in", values, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredBetween(Boolean value1, Boolean value2) {
            addCriterion("FOvered between", value1, value2, "fovered");
            return (Criteria) this;
        }

        public Criteria andFoveredNotBetween(Boolean value1, Boolean value2) {
            addCriterion("FOvered not between", value1, value2, "fovered");
            return (Criteria) this;
        }

        public Criteria andFactdateIsNull() {
            addCriterion("FActDate is null");
            return (Criteria) this;
        }

        public Criteria andFactdateIsNotNull() {
            addCriterion("FActDate is not null");
            return (Criteria) this;
        }

        public Criteria andFactdateEqualTo(Date value) {
            addCriterion("FActDate =", value, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateNotEqualTo(Date value) {
            addCriterion("FActDate <>", value, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateGreaterThan(Date value) {
            addCriterion("FActDate >", value, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateGreaterThanOrEqualTo(Date value) {
            addCriterion("FActDate >=", value, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateLessThan(Date value) {
            addCriterion("FActDate <", value, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateLessThanOrEqualTo(Date value) {
            addCriterion("FActDate <=", value, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateIn(List<Date> values) {
            addCriterion("FActDate in", values, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateNotIn(List<Date> values) {
            addCriterion("FActDate not in", values, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateBetween(Date value1, Date value2) {
            addCriterion("FActDate between", value1, value2, "factdate");
            return (Criteria) this;
        }

        public Criteria andFactdateNotBetween(Date value1, Date value2) {
            addCriterion("FActDate not between", value1, value2, "factdate");
            return (Criteria) this;
        }

        public Criteria andFpindexIsNull() {
            addCriterion("FPIndex is null");
            return (Criteria) this;
        }

        public Criteria andFpindexIsNotNull() {
            addCriterion("FPIndex is not null");
            return (Criteria) this;
        }

        public Criteria andFpindexEqualTo(BigDecimal value) {
            addCriterion("FPIndex =", value, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexNotEqualTo(BigDecimal value) {
            addCriterion("FPIndex <>", value, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexGreaterThan(BigDecimal value) {
            addCriterion("FPIndex >", value, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FPIndex >=", value, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexLessThan(BigDecimal value) {
            addCriterion("FPIndex <", value, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FPIndex <=", value, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexIn(List<BigDecimal> values) {
            addCriterion("FPIndex in", values, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexNotIn(List<BigDecimal> values) {
            addCriterion("FPIndex not in", values, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FPIndex between", value1, value2, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFpindexNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FPIndex not between", value1, value2, "fpindex");
            return (Criteria) this;
        }

        public Criteria andFbankrateIsNull() {
            addCriterion("FBankRate is null");
            return (Criteria) this;
        }

        public Criteria andFbankrateIsNotNull() {
            addCriterion("FBankRate is not null");
            return (Criteria) this;
        }

        public Criteria andFbankrateEqualTo(BigDecimal value) {
            addCriterion("FBankRate =", value, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateNotEqualTo(BigDecimal value) {
            addCriterion("FBankRate <>", value, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateGreaterThan(BigDecimal value) {
            addCriterion("FBankRate >", value, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FBankRate >=", value, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateLessThan(BigDecimal value) {
            addCriterion("FBankRate <", value, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FBankRate <=", value, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateIn(List<BigDecimal> values) {
            addCriterion("FBankRate in", values, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateNotIn(List<BigDecimal> values) {
            addCriterion("FBankRate not in", values, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FBankRate between", value1, value2, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFbankrateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FBankRate not between", value1, value2, "fbankrate");
            return (Criteria) this;
        }

        public Criteria andFcustIsNull() {
            addCriterion("FCust is null");
            return (Criteria) this;
        }

        public Criteria andFcustIsNotNull() {
            addCriterion("FCust is not null");
            return (Criteria) this;
        }

        public Criteria andFcustEqualTo(BigDecimal value) {
            addCriterion("FCust =", value, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustNotEqualTo(BigDecimal value) {
            addCriterion("FCust <>", value, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustGreaterThan(BigDecimal value) {
            addCriterion("FCust >", value, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FCust >=", value, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustLessThan(BigDecimal value) {
            addCriterion("FCust <", value, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FCust <=", value, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustIn(List<BigDecimal> values) {
            addCriterion("FCust in", values, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustNotIn(List<BigDecimal> values) {
            addCriterion("FCust not in", values, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FCust between", value1, value2, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FCust not between", value1, value2, "fcust");
            return (Criteria) this;
        }

        public Criteria andFcustidIsNull() {
            addCriterion("FCustID is null");
            return (Criteria) this;
        }

        public Criteria andFcustidIsNotNull() {
            addCriterion("FCustID is not null");
            return (Criteria) this;
        }

        public Criteria andFcustidEqualTo(Integer value) {
            addCriterion("FCustID =", value, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidNotEqualTo(Integer value) {
            addCriterion("FCustID <>", value, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidGreaterThan(Integer value) {
            addCriterion("FCustID >", value, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidGreaterThanOrEqualTo(Integer value) {
            addCriterion("FCustID >=", value, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidLessThan(Integer value) {
            addCriterion("FCustID <", value, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidLessThanOrEqualTo(Integer value) {
            addCriterion("FCustID <=", value, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidIn(List<Integer> values) {
            addCriterion("FCustID in", values, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidNotIn(List<Integer> values) {
            addCriterion("FCustID not in", values, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidBetween(Integer value1, Integer value2) {
            addCriterion("FCustID between", value1, value2, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFcustidNotBetween(Integer value1, Integer value2) {
            addCriterion("FCustID not between", value1, value2, "fcustid");
            return (Criteria) this;
        }

        public Criteria andFecustnameIsNull() {
            addCriterion("FECustName is null");
            return (Criteria) this;
        }

        public Criteria andFecustnameIsNotNull() {
            addCriterion("FECustName is not null");
            return (Criteria) this;
        }

        public Criteria andFecustnameEqualTo(String value) {
            addCriterion("FECustName =", value, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameNotEqualTo(String value) {
            addCriterion("FECustName <>", value, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameGreaterThan(String value) {
            addCriterion("FECustName >", value, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameGreaterThanOrEqualTo(String value) {
            addCriterion("FECustName >=", value, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameLessThan(String value) {
            addCriterion("FECustName <", value, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameLessThanOrEqualTo(String value) {
            addCriterion("FECustName <=", value, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameLike(String value) {
            addCriterion("FECustName like", value, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameNotLike(String value) {
            addCriterion("FECustName not like", value, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameIn(List<String> values) {
            addCriterion("FECustName in", values, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameNotIn(List<String> values) {
            addCriterion("FECustName not in", values, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameBetween(String value1, String value2) {
            addCriterion("FECustName between", value1, value2, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFecustnameNotBetween(String value1, String value2) {
            addCriterion("FECustName not between", value1, value2, "fecustname");
            return (Criteria) this;
        }

        public Criteria andFperrevnoteLikeInsensitive(String value) {
            addCriterion("upper(FPerRevNote) like", value.toUpperCase(), "fperrevnote");
            return (Criteria) this;
        }

        public Criteria andFecustnameLikeInsensitive(String value) {
            addCriterion("upper(FECustName) like", value.toUpperCase(), "fecustname");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.XD_KKDetail
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}