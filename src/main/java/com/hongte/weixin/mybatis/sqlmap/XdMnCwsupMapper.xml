<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hongte.weixin.mybatis.map.XdMnCwsupMapper">
  <resultMap id="BaseResultMap" type="com.hongte.weixin.mybatis.domain.XdMnCwsup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="FID" jdbcType="INTEGER" property="fid" />
    <id column="FEntryID" jdbcType="INTEGER" property="fentryid" />
    <result column="FSupply" jdbcType="INTEGER" property="fsupply" />
    <result column="FAmount" jdbcType="DECIMAL" property="famount" />
    <result column="FDebit" jdbcType="DECIMAL" property="fdebit" />
    <result column="FRate" jdbcType="DECIMAL" property="frate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    FID, FEntryID, FSupply, FAmount, FDebit, FRate
  </sql>
  <select id="selectByExample" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsupExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dbo.XD_MN_CWSup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsupKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from dbo.XD_MN_CWSup
    where FID = #{fid,jdbcType=INTEGER}
      and FEntryID = #{fentryid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsupKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dbo.XD_MN_CWSup
    where FID = #{fid,jdbcType=INTEGER}
      and FEntryID = #{fentryid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsupExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dbo.XD_MN_CWSup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dbo.XD_MN_CWSup (FID, FEntryID, FSupply, 
      FAmount, FDebit, FRate
      )
    values (#{fid,jdbcType=INTEGER}, #{fentryid,jdbcType=INTEGER}, #{fsupply,jdbcType=INTEGER}, 
      #{famount,jdbcType=DECIMAL}, #{fdebit,jdbcType=DECIMAL}, #{frate,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dbo.XD_MN_CWSup
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        FID,
      </if>
      <if test="fentryid != null">
        FEntryID,
      </if>
      <if test="fsupply != null">
        FSupply,
      </if>
      <if test="famount != null">
        FAmount,
      </if>
      <if test="fdebit != null">
        FDebit,
      </if>
      <if test="frate != null">
        FRate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="fentryid != null">
        #{fentryid,jdbcType=INTEGER},
      </if>
      <if test="fsupply != null">
        #{fsupply,jdbcType=INTEGER},
      </if>
      <if test="famount != null">
        #{famount,jdbcType=DECIMAL},
      </if>
      <if test="fdebit != null">
        #{fdebit,jdbcType=DECIMAL},
      </if>
      <if test="frate != null">
        #{frate,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsupExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from dbo.XD_MN_CWSup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dbo.XD_MN_CWSup
    <set>
      <if test="record.fid != null">
        FID = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.fentryid != null">
        FEntryID = #{record.fentryid,jdbcType=INTEGER},
      </if>
      <if test="record.fsupply != null">
        FSupply = #{record.fsupply,jdbcType=INTEGER},
      </if>
      <if test="record.famount != null">
        FAmount = #{record.famount,jdbcType=DECIMAL},
      </if>
      <if test="record.fdebit != null">
        FDebit = #{record.fdebit,jdbcType=DECIMAL},
      </if>
      <if test="record.frate != null">
        FRate = #{record.frate,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dbo.XD_MN_CWSup
    set FID = #{record.fid,jdbcType=INTEGER},
      FEntryID = #{record.fentryid,jdbcType=INTEGER},
      FSupply = #{record.fsupply,jdbcType=INTEGER},
      FAmount = #{record.famount,jdbcType=DECIMAL},
      FDebit = #{record.fdebit,jdbcType=DECIMAL},
      FRate = #{record.frate,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dbo.XD_MN_CWSup
    <set>
      <if test="fsupply != null">
        FSupply = #{fsupply,jdbcType=INTEGER},
      </if>
      <if test="famount != null">
        FAmount = #{famount,jdbcType=DECIMAL},
      </if>
      <if test="fdebit != null">
        FDebit = #{fdebit,jdbcType=DECIMAL},
      </if>
      <if test="frate != null">
        FRate = #{frate,jdbcType=DECIMAL},
      </if>
    </set>
    where FID = #{fid,jdbcType=INTEGER}
      and FEntryID = #{fentryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hongte.weixin.mybatis.domain.XdMnCwsup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dbo.XD_MN_CWSup
    set FSupply = #{fsupply,jdbcType=INTEGER},
      FAmount = #{famount,jdbcType=DECIMAL},
      FDebit = #{fdebit,jdbcType=DECIMAL},
      FRate = #{frate,jdbcType=DECIMAL}
    where FID = #{fid,jdbcType=INTEGER}
      and FEntryID = #{fentryid,jdbcType=INTEGER}
  </update>
</mapper>